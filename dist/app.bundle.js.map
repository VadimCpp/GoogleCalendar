{"version":3,"sources":["webpack:///webpack/bootstrap ebf6332b330bc3b10cf9","webpack:///./src/app.js","webpack:///./src/model/googlecalendar.js","webpack:///./src/view/simpleview.js","webpack:///./src/view/detailedview.js","webpack:///./src/view/calendarview.js"],"names":["App","config","that","_googleCalendar","apiKey","calendarId","document","getElementById","addEventListener","e","updateSchedule","disableButtons","displayProgress","hideError","load","success","hideProgress","enableButtons","displayData","displayError","classList","add","remove","simpleView","render","getData","detailedView","calendarView","_elementId","hasChildNodes","onDateChanged","date","app","window","onload","start","GoogleCalendar","requestConfig","_calendarUrl","_timeMin","_timeMax","_recurringEvents","_data","callback","finalURL","concat","request","XMLHttpRequest","open","status","JSON","parse","responseText","console","error","err","onerror","send","SimpleView","elementId","data","warn","_renderSpecificDate","upcomingTopN","element","result","upcomingResultTemp","upcomingResult","upcomingCounter","items","filter","item","hasOwnProperty","sort","_comp","reverse","i","_isPast","end","dateTime","push","innerHTML","_transformToParagraph","moment","format","compareDate","Date","now","getTime","a","b","event","putDate","retVal","dateStart","_getDateInfo","_getSimpleFormattedDate","summary","_getSimpleLocation","location","startDate","getDate","getMonth","getFullYear","getHours","getMinutes","formattedTime","_getFormattedTime24","dayNameStart","_getDayNameFormatted","_getMonthName","hour","minute","dateFormatted","_getDayName","_getDateFormatted","getDay","day","dayNames","dateInfo","month","monthNames","simpleLocation","secondCommaPosition","indexOf","substr","DetailedView","_transformToArticle","_getFullFormattedDate","description","_getFullLocation","CalendarView","_onDateChangedCallback","today","events","getEvents","$","kendoCalendar","value","change","dates","content","culture","cb","length","started","momentDate"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ebf6332b330bc3b10cf9","import GoogleCalendar from './model/googlecalendar.js';\r\nimport SimpleView from './view/simpleview.js';\r\nimport DetailedView from './view/detailedview.js';\r\nimport CalendarView from './view/calendarview.js';\r\n\r\n/**\r\n * Class representing an App.\r\n */\r\nclass App {\r\n\r\n    /**\r\n     * @param {{ apiKey: !string, calendarId: !string }} config\r\n     * @public\r\n     */\r\n    constructor(config) {\r\n\r\n        let that = this;\r\n\r\n        /**\r\n         * @type {!GoogleCalendar}\r\n         * @private\r\n         */\r\n        this._googleCalendar = new GoogleCalendar({ apiKey, calendarId });\r\n    }\r\n\r\n    /**\r\n     * Request Google Calendar data and render information.\r\n     *   \r\n     * @public\r\n     */\r\n    start() {\r\n        var that = this;\r\n\r\n        document.getElementById('btn-load').addEventListener('click', function(e) {\r\n            that.updateSchedule();\r\n        });\r\n\r\n        that.updateSchedule();\r\n    }\r\n\r\n\r\n    /**\r\n     * Update the schedule.\r\n     * @public\r\n     */\r\n    updateSchedule() {\r\n        this.disableButtons();\r\n        this.displayProgress();\r\n        this.hideError();\r\n\r\n        this._googleCalendar.load((success) => {\r\n            if (success) {\r\n                this.hideProgress();\r\n                this.enableButtons();\r\n                this.displayData();\r\n            } else {\r\n                this.hideProgress();\r\n                this.enableButtons();\r\n                this.displayError();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    disableButtons() {\r\n        document.getElementById('btn-load').classList.add('disabled');\r\n        document.getElementById('btn-copy').classList.add('disabled');\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    enableButtons() {\r\n        document.getElementById('btn-load').classList.remove('disabled');\r\n        document.getElementById('btn-copy').classList.remove('disabled');\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    displayProgress() {\r\n        document.getElementById('view-progress').classList.remove('container_hidden');\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    hideProgress() {\r\n        document.getElementById('view-progress').classList.add('container_hidden');\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    displayError() {\r\n        document.getElementById('view-error').classList.remove('container_hidden');\r\n    }\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    hideError() {\r\n        document.getElementById('view-error').classList.add('container_hidden');\r\n    }\r\n\r\n\r\n    displayData() {\r\n        /**\r\n         * @type {App}\r\n         */\r\n        const that = this;\r\n\r\n        /**\r\n         * @type {!SimpleView}\r\n         */\r\n        let simpleView = new SimpleView('simple-view');\r\n\r\n        simpleView.render(that._googleCalendar.getData());\r\n\r\n        /**\r\n         * @type {!DetailedView}\r\n         */\r\n        let detailedView = new DetailedView('detailed-view');\r\n\r\n        detailedView.render(that._googleCalendar.getData());\r\n\r\n        /**\r\n         * @type {!CalendarView}\r\n         */\r\n        let calendarView = new CalendarView('calendar-view');\r\n\r\n        if(!document.getElementById(calendarView._elementId).hasChildNodes()) calendarView.render(that._googleCalendar.getData());\r\n        calendarView.onDateChanged((date) => { \r\n            simpleView.render(that._googleCalendar.getData(), date);\r\n            detailedView.render(that._googleCalendar.getData(), date);\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * From Google Developer Console\r\n * @type {!string}\r\n */\r\nlet apiKey = \"AIzaSyBOXnnT1F-h9s1FP3063BQ_o0KtD7Y0DPs\";\r\n\r\n/**\r\n * From Google Calendar Web App\r\n * @type {!string}\r\n */\r\nlet calendarId = \"dveenjcu4k5ktd3k8pv4iul2bk@group.calendar.google.com\";\r\n\r\n/**\r\n * @type {!App}\r\n */\r\nlet app;\r\n\r\nwindow.onload = () => {\r\n    app = new App({ apiKey, calendarId });\r\n    app.start();\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app.js","/**\r\n * Class only loads GoogleCalendar data.\r\n */\r\nexport default class GoogleCalendar {\r\n\r\n    constructor(requestConfig) {\r\n\r\n        /**\r\n         * @type {!string}\r\n         * @private\r\n         */\r\n        this._calendarUrl = 'https://www.googleapis.com/calendar/v3/calendars/' \r\n            + requestConfig.calendarId \r\n            + '/events?key=' \r\n            + requestConfig.apiKey,\r\n\r\n        /**\r\n         * @type {!string}\r\n         * @private\r\n         */\r\n        this._timeMin = '2016-06-03T10:00:00-07:00';\r\n\r\n        /**\r\n         * @type {!string}\r\n         * @private\r\n         */\r\n        this._timeMax = '2020-06-03T10:00:00-07:00';\r\n\r\n        /**\r\n         * @type {!boolean}\r\n         * @private\r\n         */\r\n        this._recurringEvents = true;\r\n\r\n        /**\r\n         * @type {!Object}\r\n         * @private\r\n         */\r\n        this._data = null;\r\n    }\r\n\r\n    /**\r\n     * Gets JSON from Google Calendar and transfroms it into html list items and appends it to past or upcoming events list\r\n     * @param { !function( !boolean, ?Object ) }\r\n     * @public\r\n     */\r\n    load(callback) {\r\n\r\n        /**\r\n         * @type {!string}\r\n         */\r\n        let finalURL = this._calendarUrl;\r\n\r\n        finalURL = finalURL.concat('&singleEvents=true&orderBy=starttime');\r\n        finalURL = finalURL.concat('&timeMin=' + this._timeMin);\r\n        finalURL = finalURL.concat('&timeMax=' + this._timeMax);\r\n        \r\n        /**\r\n         * @type {!XMLHttpRequest}\r\n         */\r\n        let request = new XMLHttpRequest();\r\n\r\n        request.open('GET', finalURL, true);\r\n        \r\n        request.onload = () => {\r\n            if (request.status >= 200 && request.status < 400) {\r\n\r\n                this._data = JSON.parse(request.responseText);;\r\n                callback(true, this._data);\r\n            } else {\r\n                console.error(err);\r\n                callback(false, null);\r\n            }\r\n        };\r\n        \r\n        request.onerror = () => {\r\n            console.error(err);\r\n            callback(false, null);\r\n        };\r\n        \r\n        request.send();\r\n    };\r\n\r\n    /**\r\n     * @return {?Object}\r\n     * @public\r\n     */\r\n    getData() {\r\n        return this._data;\r\n    }\r\n\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/model/googlecalendar.js","/**\r\n * Class SimpleView renders calendar events.\r\n */\r\nexport default class SimpleView {\r\n    \r\n    /**\r\n     * @param {!string} elementId\r\n     * @public\r\n     */\r\n    constructor(elementId) {\r\n\r\n        /**\r\n         * @type {!string}\r\n         * @private\r\n         */\r\n        this._elementId = elementId;\r\n    }\r\n\r\n    /**\r\n     * @param {Object} data\r\n     * @param {Date} date\r\n     * @public\r\n     */\r\n    render(data, date) {\r\n\r\n        if (!data) {\r\n            console.warn('SimpleView: cannot render null object. Skipped!');\r\n            return;\r\n        }\r\n\r\n        if (date) {\r\n            this._renderSpecificDate(data, date);\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * The maximum number of events allowed to display\r\n         *\r\n         * @const {!number}\r\n         */\r\n        const upcomingTopN = 10;\r\n\r\n        /**\r\n         * @type {!Element}\r\n         */\r\n        let element = document.getElementById(this._elementId);\r\n\r\n        /**\r\n         * @type {!Array}\r\n         */\r\n        let result = [];\r\n\r\n        /**\r\n         * @type {!Array}\r\n         */\r\n        let upcomingResultTemp = [];\r\n\r\n\r\n        /**\r\n         * @type {!Array}\r\n         */\r\n        let upcomingResult = [];\r\n\r\n        /**\r\n         * @type {!number}\r\n         */\r\n        let upcomingCounter = 0;\r\n\r\n        // Remove cancelled events, sort by date\r\n        result = data.items.filter(item => item && item.hasOwnProperty('status') && item.status !== 'cancelled').sort(this._comp).reverse();\r\n\r\n        let i;\r\n\r\n        for (i in result) {\r\n            if (!this._isPast(result[i].end.dateTime || result[i].end.date)) {\r\n                upcomingResultTemp.push(result[i]);\r\n            }\r\n        }\r\n\r\n        upcomingResultTemp.reverse();\r\n\r\n        for (i in upcomingResultTemp) {\r\n            if (upcomingCounter < upcomingTopN) {\r\n                upcomingResult.push(upcomingResultTemp[i]);\r\n                upcomingCounter++;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * @type {!string}\r\n         */\r\n        let innerHTML = '<h1 class=\"h2\"> Анонс мероприятий </h1>';\r\n\r\n        for (i in upcomingResult) {\r\n            innerHTML += this._transformToParagraph(upcomingResult[i], true);\r\n        }\r\n\r\n        innerHTML += '<p> Подробнее ➡️ <a href=\"//events4friends.ru/\">events4friends.ru</a> </p>';\r\n\r\n        element.innerHTML = innerHTML;\r\n    }\r\n\r\n    /**\r\n     * @param {Object} data\r\n     * @param {Date} date\r\n     * @private\r\n     */\r\n    _renderSpecificDate(data, date) {\r\n\r\n        /**\r\n         * @type {!Element}\r\n         */\r\n        let element = document.getElementById(this._elementId);\r\n\r\n        /**\r\n         * @type {!Array}\r\n         */\r\n        let result = data.items.filter(item => item && \r\n            item.hasOwnProperty('status') && \r\n            item.status !== 'cancelled' && \r\n            moment(item.start.date || item.start.dateTime).format('YYYY-MM-DD') === moment(date).format('YYYY-MM-DD')\r\n        ).sort(this._comp).reverse();\r\n\r\n        let i;\r\n\r\n        /**\r\n         * @type {!string}\r\n         */\r\n        let innerHTML = '<h1 class=\"h2\"> 📅&nbsp;&nbsp;' + moment(date).format('LL') + '</h1>';\r\n\r\n        for (i in result) {\r\n            innerHTML += this._transformToParagraph(result[i], false);\r\n        }\r\n\r\n        innerHTML += '<p> Подробнее ➡️ <a href=\"//events4friends.ru/\">events4friends.ru</a> </p>';\r\n\r\n        element.innerHTML = innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Check if date is later then now\r\n     *\r\n     * @param {!Date} date\r\n     * @return {!boolean}\r\n     * @private\r\n     */\r\n    _isPast(date) {\r\n        /**\r\n         * @type {!string}\r\n         */\r\n        let compareDate = new Date(date);\r\n\r\n        /**\r\n         * @type {!string}\r\n         */\r\n        let now = new Date();\r\n\r\n        if (now.getTime() > compareDate.getTime()) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * Compare dates.\r\n     *\r\n     * @param {!Object} a\r\n     * @param {!Object} b\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    _comp(a, b) {\r\n        return new Date(a.start.dateTime || a.start.date).getTime() - new Date(b.start.dateTime || b.start.date).getTime();  \r\n    }\r\n\r\n    /**\r\n     * Transforms record to a line\r\n     *\r\n     * @param {!Object} event\r\n     * @param {boolean} putDate\r\n     * @return {!string}\r\n     * @private\r\n     */\r\n    _transformToParagraph(event, putDate) {\r\n        /**\r\n         * @type {!string}\r\n         */\r\n        let retVal = '<p>';\r\n\r\n        /**\r\n         * @type {!Array}\r\n         */\r\n        let dateStart = this._getDateInfo(event.start.dateTime || event.start.date);\r\n\r\n        retVal += this._getSimpleFormattedDate(dateStart, putDate);\r\n        retVal += ' － ';\r\n        retVal += '«' + event.summary + '»';\r\n        retVal += ', ';\r\n\r\n        retVal += this._getSimpleLocation(event.location || ''),\r\n\r\n        retVal += '</p>';\r\n\r\n        return retVal;\r\n    }\r\n\r\n    /**\r\n     * Get temp array with information abou day in followin format: [day number, month number, year, hours, minutes]\r\n     *\r\n     * @type {!string} startDate\r\n     * @return {!Array}\r\n     * @private\r\n     */\r\n    _getDateInfo(startDate) {\r\n        /**\r\n         * @type {!Date}\r\n         */\r\n        let date = new Date(startDate);\r\n\r\n        return [date.getDate(), date.getMonth(), date.getFullYear(), date.getHours(), date.getMinutes(), 0, 0];\r\n    };\r\n\r\n\r\n    /**\r\n     * @type {!Array} dateStart\r\n     * @param {boolean} putDate     \r\n     * @return {!string} - date, month, day, time\r\n     * @private\r\n     */\r\n    _getSimpleFormattedDate(dateStart, putDate) {\r\n\r\n        /**\r\n         * @type {!string}\r\n         */        \r\n        let retVal = '';\r\n\r\n        /**\r\n         * @type {!string}\r\n         */        \r\n        let formattedTime = '🕗&nbsp;&nbsp;' + this._getFormattedTime24(dateStart);\r\n            \r\n        /**\r\n         * @type {!string}\r\n         */  \r\n        let dayNameStart = this._getDayNameFormatted(dateStart);\r\n\r\n        if (putDate) {\r\n            retVal = '📅&nbsp;&nbsp;' + dateStart[0] + ' ' + this._getMonthName(dateStart[1]) + ', ' + dayNameStart + ' ' + formattedTime;\r\n        } else {\r\n            retVal = formattedTime;\r\n        }\r\n\r\n        return retVal;\r\n    }\r\n\r\n    /**\r\n     * @type {!Array} date\r\n     * @return {!string} - hh:mm\r\n     * @private\r\n     */\r\n    _getFormattedTime24(date) {\r\n        var formattedTime = '',\r\n            hour = date[3],\r\n            minute = date[4];\r\n\r\n        // Ensure 2-digit minute value.\r\n        minute = (minute < 10 ? '0' : '') + minute;\r\n\r\n        // Ensure 2-digit hour value.\r\n        hour = (hour < 10 ? '0' : '') + hour;\r\n\r\n        // Format time.\r\n        formattedTime = hour + ':' + minute;\r\n\r\n        return formattedTime;\r\n    }\r\n\r\n    /**\r\n     * @type {!Array} dateFormatted\r\n     * @return {!string} - ????\r\n     * @private\r\n     */\r\n    _getDayNameFormatted(dateFormatted) {\r\n\r\n        return this._getDayName(this._getDateFormatted(dateFormatted).getDay()) + ' ';\r\n\r\n    }\r\n    \r\n    /**\r\n     * @type {!number} day\r\n     * @return {!string} - week day\r\n     * @private\r\n     */        \r\n    _getDayName(day) {\r\n\r\n        /**\r\n         * @type {!Array}\r\n         */        \r\n        let dayNames = [\r\n            'воскресенье', \r\n            'понедельник', \r\n            'вторник', \r\n            'среда', \r\n            'четверг', \r\n            'пятница', \r\n            'суббота'\r\n        ];\r\n\r\n        return dayNames[day];\r\n    };    \r\n\r\n    /**\r\n     * @type {!Array} dateInfo\r\n     * @return {!Date}\r\n     * @private\r\n     */        \r\n    _getDateFormatted(dateInfo) {\r\n\r\n        return new Date(dateInfo[2], dateInfo[1], dateInfo[0], dateInfo[3], dateInfo[4] + 0, 0);\r\n\r\n    }\r\n\r\n    /**\r\n     * Get month name according to index.\r\n     *\r\n     * @type {!number} month\r\n     * @return {!string}\r\n     * @private\r\n     */      \r\n    _getMonthName(month) {\r\n\r\n        /**\r\n         * @type {!Array}\r\n         */      \r\n        let monthNames = [\r\n            'января', \r\n            'февраля', \r\n            'марта', \r\n            'апреля', \r\n            'мая', \r\n            'июня', \r\n            'июля', \r\n            'августа', \r\n            'сентября', \r\n            'октября', \r\n            'ноября', \r\n            'декабря'\r\n        ];\r\n\r\n        return monthNames[month];\r\n    };\r\n\r\n    /**\r\n     * @type {!string} location\r\n     * @return {!string}\r\n     * @private\r\n     */   \r\n    _getSimpleLocation(location) {\r\n\r\n        /**\r\n         * @type {!string}\r\n         */  \r\n        let simpleLocation = '';\r\n\r\n        /**\r\n         * @type {!number}\r\n         */  \r\n        let secondCommaPosition = location.indexOf(',', location.indexOf(',', 0) + 1);\r\n\r\n        if (secondCommaPosition > 0) {\r\n          simpleLocation = location.substr(0, secondCommaPosition);\r\n        }\r\n\r\n        return '📍&nbsp;&nbsp;' + simpleLocation;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/view/simpleview.js","/**\r\n * Class DetailedView renders calendar events.\r\n */\r\nexport default class DetailedView {\r\n    \r\n    /**\r\n     * @param {!string} elementId\r\n     * @public\r\n     */\r\n    constructor(elementId) {\r\n\r\n        /**\r\n         * @type {!string}\r\n         * @private\r\n         */\r\n        this._elementId = elementId;\r\n    }\r\n\r\n    /**\r\n     * @param {!Object} data\r\n     * @param {Date} date\r\n     * @public\r\n     */\r\n    render(data, date) {\r\n\r\n        if (!data) {\r\n            console.warn('SimpleView: cannot render null object. Skipped!');\r\n            return;\r\n        }\r\n        \r\n        if (date) {\r\n            this._renderSpecificDate(data, date);\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * The maximum number of events allowed to display\r\n         *\r\n         * @const {!number}\r\n         */\r\n        const upcomingTopN = 10;\r\n\r\n        /**\r\n         * @type {!Element}\r\n         */\r\n        let element = document.getElementById(this._elementId);\r\n\r\n        /**\r\n         * @type {!Array}\r\n         */\r\n        let result = [];\r\n\r\n        /**\r\n         * @type {!Array}\r\n         */\r\n        let upcomingResultTemp = [];\r\n\r\n\r\n        /**\r\n         * @type {!Array}\r\n         */\r\n        let upcomingResult = [];\r\n\r\n        /**\r\n         * @type {!number}\r\n         */\r\n        let upcomingCounter = 0;\r\n\r\n        // Remove cancelled events, sort by date\r\n        result = data.items.filter(item => item && item.hasOwnProperty('status') && item.status !== 'cancelled').sort(this._comp).reverse();\r\n\r\n        let i;\r\n\r\n        for (i in result) {\r\n            if (!this._isPast(result[i].end.dateTime || result[i].end.date)) {\r\n                upcomingResultTemp.push(result[i]);\r\n            }\r\n        }\r\n\r\n        upcomingResultTemp.reverse();\r\n\r\n        for (i in upcomingResultTemp) {\r\n            if (upcomingCounter < upcomingTopN) {\r\n                upcomingResult.push(upcomingResultTemp[i]);\r\n                upcomingCounter++;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * @type {!string}\r\n         */\r\n        let innerHTML = '<h1 class=\"h2\"> Подробно </h1>';\r\n\r\n        for (i in upcomingResult) {\r\n            innerHTML += this._transformToArticle(upcomingResult[i]);\r\n        }\r\n\r\n        element.innerHTML = innerHTML;\r\n    }\r\n\r\n    /**\r\n     * @param {Object} data\r\n     * @param {Date} date\r\n     * @private\r\n     */\r\n    _renderSpecificDate(data, date) {\r\n\r\n        /**\r\n         * @type {!Element}\r\n         */\r\n        let element = document.getElementById(this._elementId);\r\n\r\n        /**\r\n         * @type {!Array}\r\n         */\r\n        let result = data.items.filter(item => item && \r\n            item.hasOwnProperty('status') && \r\n            item.status !== 'cancelled' && \r\n            moment(item.start.dateTime).format('YYYY-MM-DD') === moment(date).format('YYYY-MM-DD')\r\n        ).sort(this._comp).reverse();\r\n\r\n        let i;\r\n\r\n        /**\r\n         * @type {!string}\r\n         */\r\n        let innerHTML = '<h1 class=\"h2\"> Подробно </h1>';\r\n\r\n        for (i in result) {\r\n            innerHTML += this._transformToArticle(result[i]);\r\n        }\r\n\r\n        element.innerHTML = innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Check if date is later then now\r\n     *\r\n     * @param {!Date} date\r\n     * @return {!boolean}\r\n     * @private\r\n     */\r\n    _isPast(date) {\r\n        /**\r\n         * @type {!string}\r\n         */\r\n        let compareDate = new Date(date);\r\n\r\n        /**\r\n         * @type {!string}\r\n         */\r\n        let now = new Date();\r\n\r\n        if (now.getTime() > compareDate.getTime()) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * Compare dates.\r\n     *\r\n     * @param {!Object} a\r\n     * @param {!Object} b\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    _comp(a, b) {\r\n        return new Date(a.start.dateTime || a.start.date).getTime() - new Date(b.start.dateTime || b.start.date).getTime();  \r\n    }\r\n\r\n    /**\r\n     * Transforms record to a line\r\n     *\r\n     * @param {!Object} event\r\n     * @return {!string}\r\n     * @private\r\n     */\r\n    _transformToArticle(event) {\r\n        /**\r\n         * @type {!string}\r\n         */\r\n        let retVal = '<article class=\"mt-5 mb-5\">';\r\n        retVal += '<h2 class=\"h4 mb-0\">' + '«' + event.summary + '»' + '</h2>';\r\n        retVal += '<div>';\r\n\r\n        /**\r\n         * @type {!Array}\r\n         */\r\n        let dateStart = this._getDateInfo(event.start.dateTime || event.start.date);\r\n\r\n        retVal += this._getFullFormattedDate(dateStart);\r\n\r\n        retVal += '<p>' + event.description + '</p>';\r\n\r\n        retVal += this._getFullLocation(event.location || ''),\r\n\r\n        retVal += '</div>';\r\n        retVal += '</article>';\r\n\r\n        return retVal;\r\n    }\r\n\r\n    /**\r\n     * Get temp array with information abou day in followin format: [day number, month number, year, hours, minutes]\r\n     *\r\n     * @type {!string} startDate\r\n     * @return {!Array}\r\n     * @private\r\n     */\r\n    _getDateInfo(startDate) {\r\n        /**\r\n         * @type {!Date}\r\n         */\r\n        let date = new Date(startDate);\r\n\r\n        return [date.getDate(), date.getMonth(), date.getFullYear(), date.getHours(), date.getMinutes(), 0, 0];\r\n    };\r\n\r\n\r\n    /**\r\n     * @type {!Array} dateStart\r\n     * @return {!string} - date, month, year, day, time\r\n     * @private\r\n     */\r\n    _getFullFormattedDate(dateStart) {\r\n        /**\r\n         * @type {!string}\r\n         */        \r\n        let formattedTime = ' в ' + this._getFormattedTime24(dateStart);\r\n            \r\n        /**\r\n         * @type {!string}\r\n         */  \r\n        let dayNameStart = this._getDayNameFormatted(dateStart);\r\n\r\n        return '<p>' \r\n            + dateStart[0] + ' ' \r\n            + this._getMonthName(dateStart[1]) + ' ' \r\n            + dateStart[2] + ', ' \r\n            + dayNameStart + ' ' \r\n            + formattedTime \r\n            + '</p>';\r\n    }\r\n\r\n    /**\r\n     * @type {!Array} date\r\n     * @return {!string} - hh:mm\r\n     * @private\r\n     */\r\n    _getFormattedTime24(date) {\r\n        var formattedTime = '',\r\n            hour = date[3],\r\n            minute = date[4];\r\n\r\n        // Ensure 2-digit minute value.\r\n        minute = (minute < 10 ? '0' : '') + minute;\r\n\r\n        // Ensure 2-digit hour value.\r\n        hour = (hour < 10 ? '0' : '') + hour;\r\n\r\n        // Format time.\r\n        formattedTime = hour + ':' + minute;\r\n\r\n        return formattedTime;\r\n    }\r\n\r\n    /**\r\n     * @type {!Array} dateFormatted\r\n     * @return {!string} - ????\r\n     * @private\r\n     */\r\n    _getDayNameFormatted(dateFormatted) {\r\n\r\n        return this._getDayName(this._getDateFormatted(dateFormatted).getDay()) + ' ';\r\n\r\n    }\r\n    \r\n    /**\r\n     * @type {!number} day\r\n     * @return {!string} - week day\r\n     * @private\r\n     */        \r\n    _getDayName(day) {\r\n\r\n        /**\r\n         * @type {!Array}\r\n         */        \r\n        let dayNames = [\r\n            'воскресенье', \r\n            'понедельник', \r\n            'вторник', \r\n            'среда', \r\n            'четверг', \r\n            'пятница', \r\n            'суббота'\r\n        ];\r\n\r\n        return dayNames[day];\r\n    };    \r\n\r\n    /**\r\n     * @type {!Array} dateInfo\r\n     * @return {!Date}\r\n     * @private\r\n     */        \r\n    _getDateFormatted(dateInfo) {\r\n\r\n        return new Date(dateInfo[2], dateInfo[1], dateInfo[0], dateInfo[3], dateInfo[4] + 0, 0);\r\n\r\n    }\r\n\r\n    /**\r\n     * Get month name according to index.\r\n     *\r\n     * @type {!number} month\r\n     * @return {!string}\r\n     * @private\r\n     */      \r\n    _getMonthName(month) {\r\n\r\n        /**\r\n         * @type {!Array}\r\n         */      \r\n        let monthNames = [\r\n            'января', \r\n            'февраля', \r\n            'марта', \r\n            'апреля', \r\n            'мая', \r\n            'июня', \r\n            'июля', \r\n            'августа', \r\n            'сентября', \r\n            'октября', \r\n            'ноября', \r\n            'декабря'\r\n        ];\r\n\r\n        return monthNames[month];\r\n    };\r\n\r\n    /**\r\n     * @type {!string} location\r\n     * @return {!string}\r\n     * @private\r\n     */   \r\n    _getFullLocation(location) {\r\n        return '<p>' + '📍&nbsp;&nbsp;' + location + '</p>';\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/view/detailedview.js","/**\r\n * Class CalendarView renders full calendar.\r\n */\r\nexport default class CalendarView {\r\n    \r\n    /**\r\n     * @param {!string} elementId\r\n     * @public\r\n     */\r\n    constructor(elementId) {\r\n\r\n        /**\r\n         * @type {!string}\r\n         * @private\r\n         */\r\n        this._elementId = elementId;\r\n\r\n        /**\r\n         * @type {?Object}\r\n         * @private\r\n         */\r\n        this._data = null;\r\n\r\n        /**\r\n         * @type {?function}\r\n         * @private\r\n         */\r\n         this._onDateChangedCallback = null;\r\n    }\r\n\r\n    /**\r\n     * @param {!Object} data\r\n     * @public\r\n     */\r\n    render(data) {\r\n        /**\r\n         * @type {!CalendarView}\r\n         */\r\n        let that = this;\r\n\r\n        /**\r\n         * @type {!Date}\r\n         */\r\n        const today = new Date();\r\n\r\n        that._data = data;\r\n\r\n        let events = that.getEvents();\r\n\r\n        /**\r\n         * Init and render Kendo UI calendar\r\n         */\r\n        $('#calendar-view').kendoCalendar({\r\n            value: today,\r\n            change: function() {\r\n                if (that._onDateChangedCallback) {\r\n                    that._onDateChangedCallback(this.value());\r\n                }\r\n            },\r\n            dates: events,\r\n            month: {\r\n                content: \r\n                    '<div class=\"' +\r\n                        '# if ($.inArray(moment(data.date).format(\"YYYY-MM-DD\"), data.dates) != -1) { #' +\r\n                            'calendar-events' + \r\n                        '# } else { #' +\r\n                            'calendar-no-events' + \r\n                        '# } #' +\r\n                    '\">#= data.value # </div>'\r\n                    \r\n            },\r\n            culture: \"ru-RU\"\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * @param {function} cb\r\n     * @public\r\n     */\r\n    onDateChanged(cb) {\r\n        this._onDateChangedCallback = cb;\r\n    }\r\n\r\n\r\n    /**\r\n     * Return array of dates when event happens.\r\n     * If no events empty array is returned.\r\n     *\r\n     * @param {Date} date\r\n     * @return {Array}\r\n     * @public\r\n     */\r\n    getEvents() {\r\n        /**\r\n         * @type {Array}\r\n         */\r\n        let events = [];\r\n\r\n        if (this._data && this._data.items && this._data.items.length) {\r\n            /**\r\n             * @type {number}\r\n             */\r\n            let length = this._data.items.length;\r\n\r\n            for (let i = 0; i < length; i++) {\r\n                /**\r\n                 * @type {number}\r\n                 */\r\n                let item = this._data.items[i];\r\n\r\n                /**\r\n                 * @type {?string}\r\n                 */\r\n                let started = null;\r\n\r\n                if (item.start.dateTime) {\r\n                    started = moment(item.start.dateTime).format(\"YYYY-MM-DD\");\r\n                } else if (item.start.date) {\r\n                    started = moment(item.start.date).format(\"YYYY-MM-DD\");\r\n                }\r\n\r\n                if (started && events.indexOf(started) == -1) {\r\n                    events.push(started);\r\n                }\r\n            }\r\n\r\n            events = events.sort();\r\n        }\r\n\r\n        return events;\r\n    }\r\n\r\n\r\n    /**\r\n     * Return number of events which happens on the specified date.\r\n     * If no events found returns 0.\r\n     *\r\n     * @param {Date} date\r\n     * @return {number}\r\n     * @public\r\n     */\r\n    getEventsNo(date) {\r\n\r\n        /**\r\n         * @type {string}\r\n         */\r\n        let momentDate = moment(date).format(\"YYYY-MM-DD\");\r\n\r\n        /**\r\n         * @type {number}\r\n         */\r\n        var retVal = 0;\r\n\r\n        if (this._data && this._data.items && this._data.items.length) {\r\n            /**\r\n             * @type {number}\r\n             */\r\n            let length = this._data.items.length;\r\n\r\n            for (let i = 0; i < length; i++) {\r\n                /**\r\n                 * @type {number}\r\n                 */\r\n                let item = this._data.items[i];\r\n\r\n                /**\r\n                 * @type {?string}\r\n                 */\r\n                let started = null;\r\n\r\n                if (item.start.dateTime) {\r\n                    started = moment(item.start.dateTime).format(\"YYYY-MM-DD\");\r\n                } else if (item.start.date) {\r\n                    started = moment(item.start.date).format(\"YYYY-MM-DD\");\r\n                }\r\n\r\n                if (started && started == momentDate) {\r\n                    retVal++;\r\n                }\r\n            }\r\n        }\r\n\r\n        return retVal;\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/view/calendarview.js"],"sourceRoot":""}